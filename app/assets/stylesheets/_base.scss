$experimental-support-for-svg: true;
$legacy-support-for-ie: false;
$legacy-support-for-ie8: true;

@import "compass/css3/images";
@import "compass/css3/box-shadow";
@import "compass/css3/border-radius";
@import "compass/css3/text-shadow";
@import "compass/css3/background-size";
@import "compass/css3/columns";
@import "compass/css3/transform";
@import "compass/css3/opacity";
@import "compass/utilities/general/hacks";
@import "compass/typography/links/link-colors";
@import "compass/css3/background-clip";
@import "compass/css3/transition";
@import "compass/css3/box-sizing";

@import "icons/*.png";

$large-screen:  979px;
$medium-screen: 767px;
$small-screen:  479px;

$linkcolor: #21b0e6;
$lightgrey: #888888;

@mixin respond-to($media) {
  @if $media == large-screen {
    @media (max-width: $large-screen) { @content; }
  }
  @else if $media == medium-screen {
    @media (max-width: $medium-screen) { @content; }
  }
  @else if $media == small-screen {
    @media (max-width: $small-screen) { @content; }
  }
}

@mixin background-image-retina($file, $width, $height, $type: "png") {
  background-image: image-url($file + '.' + $type);

  @media (min--moz-device-pixel-ratio: 1.3),
  (-o-min-device-pixel-ratio: 2.6/2),
  (-webkit-min-device-pixel-ratio: 1.3),
  (min-device-pixel-ratio: 1.3),
  (min-resolution: 1.3dppx) {
    background-image: image-url($file + '@2x' + '.' + $type);
    background-size: $width $height;
  }
}

@mixin background-image-svg($file, $base64: false) {
  background-image: image-url($file + ".png");
  @if $base64 { background: rgba(0,0,0,0) inline-image(image-path($file + ".svg")); }
  @else { background: rgba(0,0,0,0) image-url($file + ".svg"); }
  background-size: 100% 100%;
}

@mixin opposite {
  display: inline-block;
  margin-right: -100%;
  width: 100%;
  text-align: right;
}

@mixin flex-box {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin flex($val) {
  -webkit-box-flex: $val;
  -moz-box-flex: $val;
  -webkit-flex: $val;
  -ms-flex: $val;
  flex: $val;
}

@mixin align-items($val) {
  $newVal: $val;
  @if $val == start { $newVal: flex- + $val }
  @else if $val == end { $newVal: flex- + $val }

  -webkit-box-align: $val;
  -moz-box-align: $val;
  -webkit-align-items: $newVal;
  -moz-align-items: $newVal;
  -o-align-items: $newVal;
  -ms-align-items: $newVal;
  align-items: $newVal;
}

@mixin flex-order($val) {
  -webkit-box-ordinal-group: $val;
  -moz-box-ordinal-group: $val;
  -ms-flex-order: $val;
  -webkit-order: $val;
  order: $val;
}